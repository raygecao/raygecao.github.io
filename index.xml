<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>拾遗之途</title><link>https://raygecao.github.io/</link><description>拾遗之途</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 18 Feb 2024 19:26:48 +0800</lastBuildDate><atom:link href="https://raygecao.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>开发利器集锦</title><link>https://raygecao.github.io/posts/toolset/</link><pubDate>Sun, 18 Feb 2024 19:26:48 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/toolset/</guid><description>&lt;p>工欲善其事，必先利其器。&lt;/p></description></item><item><title>Golang 陷阱盘算</title><link>https://raygecao.github.io/posts/go-trap/</link><pubDate>Fri, 09 Feb 2024 13:39:23 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/go-trap/</guid><description>&lt;p>取自《100 Go Mistakes and How to Avoid them》及实践中踩过的坑。&lt;/p></description></item><item><title>《数据密集型应用设计》笔记</title><link>https://raygecao.github.io/posts/ddia/</link><pubDate>Sat, 03 Feb 2024 11:50:47 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/ddia/</guid><description>&lt;p>&lt;strong>Designing Data-Intensive Applications&lt;/strong>——The Big Ideas Behind Reliable, Scalable, and Maintainable Systems.&lt;/p></description></item><item><title>任务调度器重构</title><link>https://raygecao.github.io/posts/task-scheduler/</link><pubDate>Sat, 27 Jan 2024 10:48:10 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/task-scheduler/</guid><description>&lt;p>为提升调度任务的规模，突破基于 etcd 存储状态进行调度的性能瓶颈，采用内存任务管理对调度器进行重构。&lt;/p></description></item><item><title>React前端快速构建</title><link>https://raygecao.github.io/posts/frontend-practice/</link><pubDate>Sun, 07 Jan 2024 12:50:34 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/frontend-practice/</guid><description>&lt;p>Next.js + NextAuth.js + Material UI + Materio template&lt;/p></description></item><item><title>私有化交付平台——调度部署篇</title><link>https://raygecao.github.io/posts/scheduler/</link><pubDate>Sat, 11 Nov 2023 14:52:38 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/scheduler/</guid><description>&lt;p>容器调度通过一系列规则将容器分配到各个节点上，包括容器资源需求，节点的负载情况，容器、节点间的亲和性等。&lt;/p></description></item><item><title>私有化交付平台——编排篇</title><link>https://raygecao.github.io/posts/orchestration/</link><pubDate>Wed, 12 Jul 2023 20:00:04 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/orchestration/</guid><description>&lt;p>编排就像搭积木，将零散的服务拼接成完整的系统。&lt;/p></description></item><item><title>私有化交付平台——概述篇</title><link>https://raygecao.github.io/posts/delivery-platform/</link><pubDate>Tue, 04 Jul 2023 20:25:22 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/delivery-platform/</guid><description>&lt;p>打造面向私有云的包管理器，降低研发成本，提升交付效率。&lt;/p></description></item><item><title>读《凤凰项目》有感</title><link>https://raygecao.github.io/posts/phoenix/</link><pubDate>Mon, 26 Jun 2023 12:22:23 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/phoenix/</guid><description>&lt;p>一个IT运维的传奇故事。&lt;/p></description></item><item><title>探秘开发者门户</title><link>https://raygecao.github.io/posts/dev-portal/</link><pubDate>Sat, 22 Apr 2023 13:08:19 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/dev-portal/</guid><description>&lt;p>One place for everything. Accessible to everyone.&lt;/p></description></item></channel></rss>