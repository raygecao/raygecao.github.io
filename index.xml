<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>拾遗之途</title><link>https://raygecao.github.io/</link><description>拾遗之途</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 04 Jul 2023 20:25:22 +0800</lastBuildDate><atom:link href="https://raygecao.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>私有化交付平台——概述篇</title><link>https://raygecao.github.io/posts/delivery-platform/</link><pubDate>Tue, 04 Jul 2023 20:25:22 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/delivery-platform/</guid><description>&lt;p>打造面向私有云的包管理器，降低研发成本，提升交付效率。&lt;/p></description></item><item><title>读《凤凰项目》有感</title><link>https://raygecao.github.io/posts/phoenix/</link><pubDate>Mon, 26 Jun 2023 12:22:23 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/phoenix/</guid><description>&lt;p>一个IT运维的传奇故事。&lt;/p></description></item><item><title>探秘开发者门户</title><link>https://raygecao.github.io/posts/dev-portal/</link><pubDate>Sat, 22 Apr 2023 13:08:19 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/dev-portal/</guid><description>&lt;p>One place for everything. Accessible to everyone.&lt;/p></description></item><item><title>安利一款好用的ChatGPT Web</title><link>https://raygecao.github.io/posts/chatweb/</link><pubDate>Sat, 22 Apr 2023 12:47:02 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/chatweb/</guid><description>&lt;p>无需科学上网，可以复用OpenAI账号的Chat Web。&lt;/p></description></item><item><title>AutoGPT初体验</title><link>https://raygecao.github.io/posts/autogpt/</link><pubDate>Thu, 20 Apr 2023 18:38:39 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/autogpt/</guid><description>&lt;p>嫌一句句地问ChatGPT太麻烦？试试AutoGPT吧！&lt;/p></description></item><item><title>Terraform实践</title><link>https://raygecao.github.io/posts/terraform-practice/</link><pubDate>Sun, 05 Mar 2023 10:23:12 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/terraform-practice/</guid><description>&lt;p>本文简述Terraform HCL语言；提供基于Docker与AWS平台供应基础设施的demo；并对多环境管理进行探索。&lt;/p></description></item><item><title>基础设施即代码 (IaC)</title><link>https://raygecao.github.io/posts/iac-intro/</link><pubDate>Fri, 03 Mar 2023 22:22:39 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/iac-intro/</guid><description>&lt;p>&lt;em>Infrastructure as code is the process of managing and provisioning computer data centers through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools.&lt;/em>&lt;/p></description></item><item><title>内网应用配置https</title><link>https://raygecao.github.io/posts/go-https-cert/</link><pubDate>Mon, 02 Jan 2023 21:54:29 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/go-https-cert/</guid><description>&lt;p>https改造的核心工作是申请证书，本文重点探索内网应用的证书申请。&lt;/p></description></item><item><title>Gin使用NoRoute实现默认路由踩坑总结</title><link>https://raygecao.github.io/posts/gin-noroute/</link><pubDate>Sat, 06 Aug 2022 12:34:25 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/gin-noroute/</guid><description><![CDATA[<p>gin路由注册要求是互斥的，<code>engine.NoRoute</code>可以提供默认路由的能力，
使用gin NoRoute对grpc gateway进行路由时却发生了正常返回结果但伴有<code>404</code>status code的问题。</p>]]></description></item><item><title>Golang应用中的一些IO优化</title><link>https://raygecao.github.io/posts/io-optimazition/</link><pubDate>Wed, 20 Apr 2022 13:02:27 +0800</pubDate><author>作者</author><guid>https://raygecao.github.io/posts/io-optimazition/</guid><description>&lt;p>Go Writer 和 Reader接口的设计遵循了Unix的输入和输出，一个程序的输出可以是另外一个程序的输入，与之类比，Reader将流中的数据写进缓冲中，是一种数据的流入；Writer将缓冲的数据写至流，是一种数据的流出。&lt;/p></description></item></channel></rss>